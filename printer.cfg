# This file contains common pin mappings for the BigTreeTech SKR 2.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# The "make flash" command does not work on the SKR 2. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR 2
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: The initial revision of this board has a flaw that can cause
# damage to itself and other boards. Be sure to verify the board is
# not impacted by this flaw before using it.



[stepper_x]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE3
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x: virtual_endstop
homing_retract_dist: 0
position_endstop: 0
position_max: 285
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PE0
run_current: 0.700
hold_current: 0.500
diag_pin: ^PC1
driver_SGTHRS: 118
stealthchop_threshold: 999999



[stepper_y]
step_pin: PD5
dir_pin: !PD4
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_y: virtual_endstop
homing_retract_dist: 0
position_endstop: -20
position_min: -20
position_max: 250
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PD3
run_current: 0.700
hold_current: 0.500
diag_pin: ^PC3
driver_SGTHRS: 118
stealthchop_threshold: 999999



[stepper_z]
step_pin: PA15
dir_pin: PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PC0
#position_endstop: 0.5
endstop_pin: probe: z_virtual_endstop    
position_min: 0                        
position_max: 290

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.600
hold_current: 0.500
#diag_pin: ^PC0
stealthchop_threshold: 999999


[stepper_z1]
step_pin: PD11
dir_pin: PD10
enable_pin: !PD13
microsteps: 16
rotation_distance: 8
#heater_pin: PB4
#sensor_pin: PA3
#...

[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 0.600
hold_current: 0.500
#diag_pin: ^PA0
stealthchop_threshold: 999999



[extruder]
step_pin: PD15
dir_pin: PD14
enable_pin: !PC7
microsteps: 16
#rotation_distance: 7.710  # BMG Extruder stock
rotation_distance: 7.565   #kalibriert
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA2
control = pid
pid_kp = 29.653
pid_ki = 1.661
pid_kd = 132.327
min_temp: 0
max_temp: 265
max_extrude_only_distance: 150
min_extrude_temp: 170

pressure_advance = 0.0615
#pressure_advance_smooth_time: 0.040


[tmc2209 extruder]
uart_pin: PC6
run_current: 0.650
#diag_pin: ^PC2
stealthchop_threshold: 999999




[bltouch]
sensor_pin: ^PC0
control_pin: PE5
x_offset: -35
y_offset: 15
z_offset = 1.300           # z_offset = 1.230
speed: 3.0
#probe_with_touch_mode: True


[safe_z_home]
home_xy_position: 142,125 # Change coordinates to the center of your print bed
speed: 100
z_hop: 10                 # Move up 10mm
z_hop_speed: 20



[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 0,30
mesh_max: 250, 240
probe_count: 4,4



[bed_screws]
screw1: 34,35
screw2: 240, 35
screw3: 240,212
screw4: 34,212


[screws_tilt_adjust]
screw1: 34,35
screw1_name: front left screw
screw2: 240,35
screw2_name: front right screw
screw3: 240,212
screw3_name: rear right screw
screw4: 34,212
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 70.
screw_thread: CW-M4


[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
control: pid
pid_Kp: 72.174
pid_Ki: 1.816
pid_Kd: 717.224
min_temp: 0
max_temp: 110


[fan]
pin: PB7

#[heater_fan fan1]
#pin: PB6

#[heater_fan fan2]
#pin: PB5

[heater_fan my_nozzle_fan]
pin:PB4
heater: extruder
heater_temp: 50.0
fan_speed: 1.0


[output_pin motor_power]
pin: PC13
value: 1


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_2D003F001047393437303337-if00


[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    140,125,20  # an example

[input_shaper]
shaper_freq_x: 46.2
shaper_type_x: mzv
shaper_freq_y: 32.8
shaper_type_y: mzv


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100




########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE10, EXP1_7=PE12, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE9, EXP1_6=PE11, EXP1_8=PE13, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[display]
lcd_type: emulated_st7920
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP1_3
spi_software_sclk_pin: EXP1_5
en_pin: EXP1_4
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
menu_reverse_navigation:true

[output_pin beeper]
pin: EXP1_1


[menu __main __octoprint]
type: disabled



[include mainsail.cfg]

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro LED_AN]
gcode:
   SET_LED LED=my_neopixel RED=1.0 GREEN=1.0 BLUE=1.0

[gcode_macro LED_AUS]
gcode:
   SET_LED LED=my_neopixel RED=0.0 GREEN=0.0 BLUE=0.0







[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[menu __main __setup __calib __zoffset_calib_man]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Z offset cal.

[menu __main __setup __calib __zoffset_calib_man __start]
type: command
name: Start probing
gcode:
    G28
    PROBE_CALIBRATE


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
    #before the original gcode
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G1 X125 Y125 Z5 F6000
    #the original gcode
    BASE_BED_MESH_CALIBRATE
    #after the original gcode





[menu __main __setup __calib __zoffset_calib_man __test_z]     #ThRo Sovol SV01
type: list
name: Test Z: 

[menu __main __setup __calib __zoffset_calib_man __test_z __+001]     #ThRo Sovol SV01
type: command
name: +0.01
gcode: TESTZ Z=0.01

[menu __main __setup __calib __zoffset_calib_man __test_z __+005]     #ThRo Sovol SV01
type: command
name: +0.05
gcode: TESTZ Z=0.05

[menu __main __setup __calib __zoffset_calib_man __test_z __+010]     #ThRo Sovol SV01
type: command
name: +0.1
gcode: TESTZ Z=0.1

[menu __main __setup __calib __zoffset_calib_man __test_z __+050]     #ThRo Sovol SV01
type: command
name: +0.5
gcode: TESTZ Z=0.5

[menu __main __setup __calib __zoffset_calib_man __test_z __-050]     #ThRo Sovol SV01
type: command
name: -0.5
gcode: TESTZ Z=-0.5

[menu __main __setup __calib __zoffset_calib_man __test_z __-010]     #ThRo Sovol SV01
type: command
name: -0.1
gcode: TESTZ Z=-0.1

[menu __main __setup __calib __zoffset_calib_man __test_z __-005]     #ThRo Sovol SV01
type: command
name: -0.05
gcode: TESTZ Z=-0.05

[menu __main __setup __calib __zoffset_calib_man __test_z __-001]     #ThRo Sovol SV01
type: command
name: -0.01
gcode: TESTZ Z=-0.01

[menu __main __setup __calib __zoffset_calib_man __accept]     #ThRo Sovol SV01
type: command
name: Accept
gcode: ACCEPT

[menu __main __setup __calib __zoffset_calib_man __abort]
type: command
name: Abort
gcode: ABORT

[menu __main __setup __calib __bed_screws_adjust]

type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Bed Leveling

[menu __main __setup __calib __bed_screws_adjust __start]
type: command
name: Start probing
gcode:
    G28
    BED_SCREWS_ADJUST

[menu __main __setup __calib __bed_screws_adjust __adjusted]
type: command
name: Adjusted
gcode: ADJUSTED

[menu __main __setup __calib __bed_screws_adjust __accept]
type: command
name: Accept
gcode: ACCEPT

[menu __main __setup __calib __bed_screws_adjust __abort]
type: command
name: Abort
gcode: ABORT


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor SKR2_Board]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100






[gcode_macro START_PRINT]
gcode:

        M220 S100 ;Reset Feedrate
        M221 S100 ;Reset Flowrate

        G28 ;Home

        G92 E0 ;Reset Extruder
        G1 Z2.0 F3000 ;Move Z Axis up
        G1 X10.1 Y10 Z0.3 F5000.0 ;Move to start position
        G1 X10.1 Y200.0 Z0.3 F1500.0 E15 ;Draw the first line
        G1 X10.4 Y200.0 Z0.3 F5000.0 ;Move to side a little
        G1 X10.4 Y10 Z0.3 F1500.0 E30 ;Draw the second line
        G92 E0 ;Reset Extruder
        G1 Z2.0 F3000 ;Move Z Axis up



[gcode_macro END_PRINT]
gcode:
        #Get Printer built volume dimensions
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

        #Fix-up extruder
        G91                                            
        G1 E-2 F2700                                    
        G1 E-1.5 Z0.2 F2400                        
        G1 X5 Y5 F6000                               
        G1 Z10                                     
        G90                                        

        #Present print
        G1 Z{printer.toolhead.position.z + 10} F600
        G1 X{X_MAX / 2} Y{Y_MAX} F6000
        M106 S0                                      
        M104 S0                                       
        M140 S0                                 

        #Disable Steppers
        M84 X Y E



[neopixel my_neopixel]
pin: PE6
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 18
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.072500, 0.107500, 0.157500, 0.230000
#*# 	  0.042500, 0.052500, 0.055000, 0.172500
#*# 	  0.047500, 0.027500, 0.072500, 0.155000
#*# 	  0.027500, 0.020000, 0.115000, 0.237500
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = lagrange
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 4
#*# max_y = 240.0
#*# mesh_x_pps = 2
#*# max_x = 249.99
#*#
